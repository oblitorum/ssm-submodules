#!/bin/bash

set -o errexit
set -o xtrace

. $(dirname $0)/vars

usage () {
    cat <<EOF
Usage: $0 [OPTIONS]

    The following options may be given:
        --help) usage ;;

Example $0 ssm-client ssm-dashboards
EOF
        exit 1
}

build() {
    mkdir -p ${server_build_dir}/RPMS
    chmod 777 ${server_build_dir}/RPMS
    cp -r ${rpm_dir}/* ${server_build_dir}/RPMS
    cp ${root_dir}/build/ssm-server-docker/* ${server_build_dir}/

    docker run --rm -v ${server_build_dir}/RPMS:/home/builder/RPMS ${rpmbuild_docker_image} sh -c "
        createrepo_c --update /home/builder/RPMS
        # give host user permission
        find /home/builder/RPMS/ -type d -exec chmod 0777 {} \;
        find /home/builder/RPMS/ -type f -exec chmod 0666 {} \;
    "
    for rpm in $(cd ${rpm_dir}; find . -name '*.rpm'); do
        echo $rpm
        rpm_name=$(
            docker run --rm -v ${rpm_dir}:/home/builder/rpm -w /home/builder/rpm ${rpmbuild_docker_image} \
                rpm -q --qf '%{name}' -p $rpm
        )
        rpm_fullname=$(
            docker run --rm -v ${rpm_dir}:/home/builder/rpm -w /home/builder/rpm ${rpmbuild_docker_image} \
                rpm -q -p $rpm
        )
        sed -i -e "s/- ${rpm_name}$/- ${rpm_fullname}/" ${server_build_dir}/playbook-install.yml
    done

    if [ -z "${DOCKER_TAG}" ]; then
        docker build --squash --no-cache -t shatteredsilicon/ssm-server:${ssm_version} -t shatteredsilicon/ssm-server:latest ${server_build_dir}/
        DOCKER_TAG=shatteredsilicon/ssm-server:${ssm_version}
    else
        docker build --squash --no-cache -t ${DOCKER_TAG} ${server_build_dir}/
    fi

    # use clamd@scan service to scan the docker image
    local image_tar=${tmp_dir}/ssm-server-image.tar
    local image_dir=${tmp_dir}/ssm-server-image
    local cid=$(docker create ${DOCKER_TAG})
    docker export $cid -o ${image_tar}
    docker rm ${cid}
    mkdir -vp ${image_dir}
    rm -rf ${image_dir}/* && tar -C ${image_dir} -xf ${image_tar}
    find ${image_dir} -type d -exec chmod 0777 {} \;
    find ${image_dir} -type f ! -executable -exec chmod 0666 {} \;
    find ${image_dir} -type f -executable -exec chmod 0777 {} \;
    find ${image_dir} -type f -print0 | xargs -0 -n1 -P$(nproc) clamdscan --multiscan --fdpass --quiet
    rm -rf ${image_dir}
}

main() {
    declare -a TMP_PACKAGES

    for arg do
        val=`echo "$arg" | sed -e 's;^--[^=]*=;;'`
        case "$arg" in
            *)              usage ;;
        esac
    done

    VERSION=${VERSION:-$(cd ${root_dir}; git tag -l --sort=-version:refname "v*" --merged | head -n 1)}
    build
}

main $@
